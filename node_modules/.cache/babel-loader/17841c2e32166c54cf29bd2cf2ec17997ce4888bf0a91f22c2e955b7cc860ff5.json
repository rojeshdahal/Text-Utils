{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\React\\\\simple_website\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from \"./Components/navbar\";\nimport Textarea from \"./Components/textform\";\nimport Alert from \"./Components/alert\";\n// import About from \"./Components/about\";\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const [btnText, setBtnText] = useState(\"Enable Dark Mode\");\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      showAlert(\"Dark mode has been enabled\", \"Success\");\n      setBtnText(\"Enable Light Mode\");\n      document.title = \"TextUtils-DarkMode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"Success\");\n      setBtnText(\"Enable Dark Mode\");\n      document.title = \"TextUtils-Home\";\n    }\n  };\n  const blueMode = () => {\n    if (mode === \"white\") {\n      setMode(\"blue\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Blue theme has been enabled\", \"Success\");\n      // setBtnText(\"Enable Light Mode\");\n    } else {\n      setMode(\"white\");\n      document.body.style.backgroundColor = \"#1d51a3\";\n      showAlert(\"Light mode has been enabled\", \"Success\");\n      // setBtnText(\"Enable Blue Mode\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"router\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        mode: mode,\n        toggleMode: toggleMode,\n        btnText: btnText,\n        blueMode: blueMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3 \",\n        children: /*#__PURE__*/_jsxDEV(\"switch\", {\n          children: [/*#__PURE__*/_jsxDEV(\"route\", {\n            path: \"/about\",\n            children: /*#__PURE__*/_jsxDEV(Textarea, {\n              heading: \"Enter the text to analyze\",\n              mode: mode,\n              blueMode: blueMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"route\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"for3E5pCyaa/RycJ4oFemmxJJho=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","Textarea","Alert","BrowserRouter","Route","Switch","Link","jsxDEV","_jsxDEV","App","_s","mode","setMode","alert","setAlert","btnText","setBtnText","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","blueMode","children","fileName","_jsxFileName","lineNumber","columnNumber","className","path","heading","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/React/simple_website/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./Components/navbar\";\nimport Textarea from \"./Components/textform\";\nimport Alert from \"./Components/alert\";\n// import About from \"./Components/about\";\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const [btnText, setBtnText] = useState(\"Enable Dark Mode\");\n  const showAlert = (message, type) => {\n    setAlert({ msg: message, type: type });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      showAlert(\"Dark mode has been enabled\", \"Success\");\n      setBtnText(\"Enable Light Mode\");\n      document.title = \"TextUtils-DarkMode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"Success\");\n      setBtnText(\"Enable Dark Mode\");\n      document.title = \"TextUtils-Home\";\n    }\n  };\n  const blueMode = () => {\n    if (mode === \"white\") {\n      setMode(\"blue\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Blue theme has been enabled\", \"Success\");\n      // setBtnText(\"Enable Light Mode\");\n    } else {\n      setMode(\"white\");\n      document.body.style.backgroundColor = \"#1d51a3\";\n      showAlert(\"Light mode has been enabled\", \"Success\");\n      // setBtnText(\"Enable Blue Mode\");\n    }\n  };\n  return (\n    <div>\n      <router>\n        <Navbar\n          mode={mode}\n          toggleMode={toggleMode}\n          btnText={btnText}\n          blueMode={blueMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3 \">\n          <switch>\n            <route path=\"/about\">\n              <Textarea\n                heading=\"Enter the text to analyze\"\n                mode={mode}\n                blueMode={blueMode}\n              />\n            </route>\n            <route>{/* <About /> */}</route>\n          </switch>\n        </div>\n      </router>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}